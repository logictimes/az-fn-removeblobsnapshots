{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "StorageToMonitor": {
      "type": "string",
      "metadata": {
        "description": "Connection string to the storage accout."
      }
    },
    "BlobContainer": {
      "type": "string",
      "metadata": {
        "description": "Name of the Blob to monitor."
      }
    },
      "retentionDays": {
        "type": "string",
        "metadata": {
          "description": "Nuber of days for Snapshot."
        }
    }

  },
  "variables": {
    "storageName": "[concat('function', uniqueString(parameters('FunctionName')))]",
    "contentShareName": "[toLower(parameters('FunctionName'))]",
    "repoUrl": "https://github.com/logictimes/az-fn-removeblobsnapshots.git",
    "branch": "master",
    "StorageToMonitor": "[toLower(parameters('StorageToMonitor'))]",
    "BlobContainer": "[toLower(parameters('BlobContainer'))]",
    "retentionDays": "[toLower(parameters('retentionDays'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('FunctionName')]",
      "type": "Microsoft.Web/sites",
      "properties": {
        "name": "[parameters('FunctionName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~0.1"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('contentShareName')]"
            },
            {
              "name": "storageAccount",
              "value": "[variables('StorageToMonitor')]"
            },
            {
              "name": "storageContainer",
              "value": "[variables('BlobContainer')]"
            },
            {
              "name": "retentionDays",
              "value": "[variables('retentionDays')]"
            }
            
          ]
        },
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('FunctionName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('repoURL')]",
            "branch": "[variables('branch')]",
            "IsManualIntegration": true
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "location": "[resourceGroup().location]",
      "kind": "functionapp"
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    }
  ],
  "outputs": {
    "siteUri": {
      "type": "string",
      "value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('FunctionName'))).hostNames[0])]"
    }
  }
}